name: Docker

on:
  pull_request:
  merge_group:
  push:
    branches: [main]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

permissions: {}

jobs:
  docker-build:
    name: Test Docker builds
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        dockerfile:
          - docker/base.Dockerfile
          - docker/rt.Dockerfile
          - docker/alpen-bridge/Dockerfile
          - docker/secret-service/Dockerfile
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@18ce135bb5112fa8ce4ed6c17ab05699d7f3a5e0 # v3.11.0

      - name: Cache Docker layers
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.dockerfile }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.dockerfile }}-
            ${{ runner.os }}-buildx-

      - name: Test Docker build
        run: |
          docker buildx build \
            --file ${{ matrix.dockerfile }} \
            --tag test-image:latest \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new,mode=max \
            --load \
            .

          # Move cache to avoid ever-growing cache
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  docker-success:
    name: Check that Docker builds pass
    runs-on: ubuntu-latest
    if: always()
    needs: [docker-build]
    timeout-minutes: 30
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # release/v1
        with:
          jobs: ${{ toJSON(needs) }}
