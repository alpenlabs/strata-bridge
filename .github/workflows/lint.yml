name: lint

on:
  pull_request:
  merge_group:
  push:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  NIGHTLY: nightly-2024-11-01

permissions: {}

jobs:
  clippy:
    name: Run clippy on crates
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install ${{ env.NIGHTLY }}
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: ${{ env.NIGHTLY }}

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install SP1 Toolchain
        run: |
          curl -fsSL --proto '=https' --tlsv1.2 https://sp1.succinct.xyz | bash && ~/.sp1/bin/sp1up
          export PATH=~/.sp1/bin:$PATH
          cargo prove --version

      - name: Install sqlx-cli
        run: cargo install sqlx-cli --locked

      - name: Run db migrations
        run: make migrate

      - run: cargo clippy --workspace --lib --examples --tests --benches --all-features --all-targets
        env:
          RUSTFLAGS: -D warnings
          DATABASE_URL: sqlite://./operator.db
          SKIP_GUEST_BUILD: 1

  miri:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        package:
          - secret-service-server
          # - strata-bridge-tx-graph # broken given sp1 does not like miri.
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          submodules: true

      - name: Install ${{ env.NIGHTLY }}
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: ${{ env.NIGHTLY }}
          components: miri

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install sqlx-cli
        run: cargo install sqlx-cli --locked

      - name: Run db migrations
        run: make migrate

      - name: cargo miri test
        run: cargo miri test -p ${{ matrix.package }}
        env:
          MIRIFLAGS: ""
          SKIP_GUEST_BUILD: 1

  fmt:
    name: Check code formatting
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install ${{ env.NIGHTLY }}
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: ${{ env.NIGHTLY }}
          components: rustfmt
      - name: cargo fmt check
        run: cargo fmt --all --check

  codespell:
    name: Check code spellings
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: codespell-project/actions-codespell@v2

  taplo:
    name: Lint and check formatting of TOML files
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install taplo
        run: |
          curl -fsSL https://github.com/tamasfe/taplo/releases/latest/download/taplo-full-linux-x86_64.gz \
            | gzip -d - | install -m 755 /dev/stdin /usr/local/bin/taplo
      - name: Run taplo lint
        run: |
          taplo lint
      - name: Run taplo format check
        run: |
          taplo fmt --check

  lint-success:
    name: Check that lints passed
    runs-on: ubuntu-latest
    if: always()
    needs:
      - clippy
      - fmt
      - codespell
      - taplo
    timeout-minutes: 30
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
