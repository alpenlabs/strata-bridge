# Runs unit tests.

name: Unit Tests

on:
  pull_request:
  merge_group:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      RUST_LOG:
        description: "Log level"
        required: false
        default: "info"
        type: string

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions: {}

jobs:
  extract-rust-version:
    name: Extract toolchain version
    runs-on: ubuntu-latest
    outputs:
      nightly-version: ${{ steps.extract-version.outputs.nightly-version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false

      - name: Extract Rust version
        id: extract-version
        uses: ./.github/actions/extract-rust-version

  test:
    name: Run unit tests and generate report
    runs-on: ubuntu-latest
    needs: extract-rust-version
    timeout-minutes: 60 # better fail-safe than the default 360 in github actions
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false

      - name: Cleanup space
        uses: ./.github/actions/cleanup # zizmor: ignore[unpinned-uses]

      - name: Install bitcoind
        env:
          BITCOIND_VERSION: "29.0"
          BITCOIND_ARCH: "x86_64-linux-gnu"
        run: |
          curl -fsSLO --proto "=https" --tlsv1.2 "https://bitcoincore.org/bin/bitcoin-core-$BITCOIND_VERSION/bitcoin-$BITCOIND_VERSION-$BITCOIND_ARCH.tar.gz"
          curl -fsSLO --proto "=https" --tlsv1.2 "https://bitcoincore.org/bin/bitcoin-core-$BITCOIND_VERSION/SHA256SUMS"
          sha256sum --ignore-missing --check SHA256SUMS
          tar xzf "bitcoin-$BITCOIND_VERSION-$BITCOIND_ARCH.tar.gz"
          sudo install -m 0755 -t /usr/local/bin bitcoin-"$BITCOIND_VERSION"/bin/*
          bitcoind --version
          rm -rf SHA256SUMS "bitcoin-$BITCOIND_VERSION" "bitcoin-$BITCOIND_VERSION-$BITCOIND_ARCH.tar.gz"

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@b95584d8105b9ab200e15821fa671848cf2b7017 # nightly
        with:
          components: llvm-tools-preview
          toolchain: ${{ needs.extract-rust-version.outputs.nightly-version }}

      - name: Install latest nextest release
        uses: taiki-e/install-action@3216b6964cbfe053bb8b9a2ef245bd9300e2061d # v2.62.14
        with:
          tool: nextest

      - name: Install latest just release
        uses: taiki-e/install-action@3216b6964cbfe053bb8b9a2ef245bd9300e2061d # v2.62.14
        with:
          tool: just

      - name: Install Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install SP1 Toolchain
        run: |
          curl -fsSL --proto '=https' --tlsv1.2 https://sp1.succinct.xyz | bash && ~/.sp1/bin/sp1up
          export PATH=~/.sp1/bin:$PATH
          cargo prove --version

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@3216b6964cbfe053bb8b9a2ef245bd9300e2061d # v2.62.14
        with:
          tool: cargo-llvm-cov

      - name: Rust cache
        uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2
        with:
          cache-on-failure: true

      - name: Install sqlx-cli
        run: cargo install sqlx-cli --locked

      - name: Run db migrations
        run: just migrate

      - name: Run tests with coverage
        run: |
          ZKVM_MOCK=1 cargo llvm-cov --workspace nextest --profile ci --no-capture --lcov --output-path lcov.info
        env:
          DATABASE_URL: sqlite://./operator.db
          RUST_BACKTRACE: 1
          SKIP_GUEST_BUILD: 1
          RUST_LOG: ${{ github.event.inputs.RUST_LOG || 'warn' }}

      - name: Test Summary
        uses: test-summary/action@31493c76ec9e7aa675f1585d3ed6f1da69269a86 # v2
        if: always()
        with:
          paths: "target/nextest/ci/junit.xml"

      - name: Publish Test Coverage
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          files: lcov.info
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  unit-success:
    name: Check that unit tests pass
    runs-on: ubuntu-latest
    if: always()
    needs: [test]
    timeout-minutes: 60
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # release/v1
        with:
          jobs: ${{ toJSON(needs) }}
