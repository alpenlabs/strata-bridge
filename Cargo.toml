[workspace]
resolver = "2"

members = [
  "crates/algebra",
  "crates/db",
  "crates/params",
  "crates/primitives",
  "crates/bridge-proof/protocol",
  "crates/bridge-proof/primitives",
  "crates/bridge-proof/snark",
  "crates/duty-tracker",
  "crates/rpc",
  "crates/bridge-proof/test-utils",
  "crates/stake-chain",
  "crates/connectors",
  "crates/common",
  "crates/tx-graph",
  "crates/btc-notify",
  "bridge-guest-builder",
  "crates/secret-service-proto",
  "crates/secret-service-client",
  "crates/secret-service-server",
  "crates/p2p-service",
  "crates/operator-wallet",
  "crates/wots",
  "crates/memory_pprof",

  # binaries listed separately
  "bin/secret-service",
  "bin/dev-cli",
  "bin/assert-splitter",
  "bin/alpen-bridge",
  "bin/mock-checkpoint",

  # test utilities
  "crates/test-utils",
]

default-members = [
  "bin/alpen-bridge",
  "bin/dev-cli",
  "bin/assert-splitter",
  "bin/mock-checkpoint",
]

[workspace.lints]
rust.missing_debug_implementations = "warn"
rust.rust_2018_idioms = { level = "deny", priority = -1 }
rust.unreachable_pub = "deny"
rust.unused_crate_dependencies = "deny"
rust.unused_must_use = "deny"
rust.missing_docs = "deny"
rust.unsafe_op_in_unsafe_fn = "deny"
rustdoc.all = "deny"
clippy.missing_const_for_fn = "deny"

[workspace.dependencies]
# deps in this workspace
algebra = { path = "crates/algebra" }
alpen-bridge-params = { path = "crates/params" }
btc-notify = { path = "crates/btc-notify" }
duty-tracker = { path = "crates/duty-tracker" }
operator-wallet = { version = "0.1.0", path = "crates/operator-wallet" }
prover-test-utils = { path = "crates/bridge-proof/test-utils" }
secret-service-client = { path = "crates/secret-service-client" }
secret-service-proto = { path = "crates/secret-service-proto" }
secret-service-server = { path = "crates/secret-service-server" }
strata-bridge-common = { path = "crates/common" }
strata-bridge-connectors = { path = "crates/connectors" }
strata-bridge-db = { path = "crates/db" }
strata-bridge-guest-builder = { path = "bridge-guest-builder" }
strata-bridge-p2p-service = { path = "crates/p2p-service" }
strata-bridge-primitives = { path = "crates/primitives" }
strata-bridge-proof-primitives = { path = "crates/bridge-proof/primitives" }
strata-bridge-proof-protocol = { path = "crates/bridge-proof/protocol" }
strata-bridge-proof-snark = { path = "crates/bridge-proof/snark" }
strata-bridge-rpc = { path = "crates/rpc" }
strata-bridge-stake-chain = { path = "crates/stake-chain" }
strata-bridge-test-utils = { path = "crates/test-utils" }
strata-bridge-tx-graph = { path = "crates/tx-graph" }

# deps from original strata repo
strata-bridge-tx-builder = { git = "https://github.com/alpenlabs/alpen.git" }
strata-btcio = { git = "https://github.com/alpenlabs/alpen.git" }
strata-config = { git = "https://github.com/alpenlabs/alpen.git" }
strata-crypto = { git = "https://github.com/alpenlabs/alpen.git" }
strata-key-derivation = { git = "https://github.com/alpenlabs/alpen.git" }
strata-l1tx = { git = "https://github.com/alpenlabs/alpen.git" }
strata-primitives = { git = "https://github.com/alpenlabs/alpen.git" }
strata-proofimpl-btc-blockspace = { git = "https://github.com/alpenlabs/alpen.git" }
strata-rpc-api = { git = "https://github.com/alpenlabs/alpen.git" }
strata-rpc-types = { git = "https://github.com/alpenlabs/alpen.git" }
strata-state = { git = "https://github.com/alpenlabs/alpen.git" }

strata-p2p = { git = "https://github.com/alpenlabs/strata-p2p.git" }
strata-p2p-types = { git = "https://github.com/alpenlabs/strata-p2p.git" }
strata-p2p-wire = { git = "https://github.com/alpenlabs/strata-p2p.git" }

zkaleido = { git = "https://github.com/alpenlabs/zkaleido", tag = "v0.1.0-alpha-rc11" }
zkaleido-native-adapter = { git = "https://github.com/alpenlabs/zkaleido", tag = "v0.1.0-alpha-rc11" }
zkaleido-sp1-groth16-verifier = { git = "https://github.com/alpenlabs/zkaleido", tag = "v0.1.0-alpha-rc11" }
zkaleido-sp1-host = { git = "https://github.com/alpenlabs/zkaleido", tag = "v0.1.0-alpha-rc11" }

# external deps
alloy = { version = "0.14", features = ["full", "node-bindings"] }
alloy-signer = "0.14"
anyhow = "1.0.95"
arbitrary = { version = "1.4.1", features = ["derive"] }
ark-bn254 = "0.5.0"
ark-ec = "0.5.0"
ark-ff = "0.5.0"
ark-groth16 = "0.5.0"
ark-serialize = "0.5.0"
async-trait = "0.1.81"
base64 = "0.22.1"
bdk_bitcoind_rpc = "0.18.0"
bdk_esplora = { version = "0.20.1", features = [
  "async-https",
  "async-https-rustls",
  "tokio",
], default-features = false }
bdk_wallet = "1.1.0"
bincode = "1.3.3"
blake3 = "1.6.1"
# TODO(proofofkeags): when updating `bitcoin` to >=0.33.0, go through btc-notify and update tests to no longer constrain heights.
bitcoin = { version = "0.32.6", features = ["rand-std", "serde"] }
bitcoin-bosd = "0.4.0"
bitcoin-script = { git = "https://github.com/BitVM/rust-bitcoin-script" }
bitcoincore-rpc = "0.19.0"
bitcoind-async-client = "0.1.1"
bitvm = { git = "https://github.com/alpenlabs/BitVM.git", branch = "release/0.1.0-rc.1" }
borsh = { version = "1.5.0", features = ["derive"] }
chrono = "0.4.38"
clap = { version = "4.5.20", features = ["cargo", "derive", "env"] }
corepc-node = { version = "0.7.1", features = ["28_0"] }
dotenvy = "0.15.7"
esplora-client = { git = "https://github.com/BitVM/rust-esplora-client", default-features = false, features = [
  "blocking-https-rustls",
  "async-https-rustls",
] }
ethnum = "1.5.0"
futures = "0.3.31"
hex = { version = "0.4.3", features = ["serde"] }
indexmap = "2.8.0"
jsonrpsee = "0.24.7"
jsonrpsee-types = "0.24.7"
kanal = "0.1.0-pre8"
libp2p = { version = "0.55.0", features = [
  "noise",
  "gossipsub",
  "tcp",
  "request-response",
  "tokio",
  "secp256k1",
  "macros",
  "ping",
  "yamux",
  "identify",
] }
miniscript = "12.3.0"
musig2 = { version = "0.1.0", features = [
  "serde",
  "rand",
] } # can't be updated without updating bitcoin
opentelemetry = "0.29.1"
opentelemetry-otlp = { version = "0.29.0", features = ["grpc-tonic"] }
opentelemetry_sdk = { version = "0.29.0", features = ["rt-tokio"] }
parking_lot = "0.12.3"
proptest = "1.6.0"
proptest-derive = "0.5.1"
quinn = "0.11.6"
rand = "0.8.5"
reqwest = { version = "0.12.12", default-features = false, features = [
  "http2",
  "rustls-tls",
  "charset",
  "zstd",
  "json",
] }
rkyv = "0.8.8"
secp256k1 = "0.29.1"
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0", default-features = false, features = [
  "alloc",
  "raw_value",
] }
serde_with = "3.12.0"
serial_test = "3.2.0"
sha2 = "0.10"
sp1-sdk = "5.0.0"
sp1-verifier = "5.0.0"
sqlx = { version = "0.8.2", features = [
  "sqlite",
  "runtime-tokio",
  "json",
  "macros",
  "derive",
  "migrate",
] }
tempfile = "3.10.1"
# TODO: (@Zk2u) update this once <https://github.com/komora-io/terrors/pull/20> is merged.
terrors = { version = "0.3.2", git = "https://github.com/alpenlabs/terrors", features = [
  "rkyv_32",
  "rkyv_bytecheck",
] }
thiserror = "2.0.3"
tokio = { version = "1.37", features = ["full"] }
tokio-util = { version = "0.7.13", default-features = false, features = ["rt"] }

toml = "0.8.20"
tracing = "0.1.40"
tracing-opentelemetry = "0.30.0"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }

# This is needed for custom build of SP1
[profile.release.build-override]
opt-level = 3
